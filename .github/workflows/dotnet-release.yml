
name: Build and Release API

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. 1.0.0)'
        required: true
        type: string
  push:
    tags:
      - 'v*'

jobs:
  determine_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - id: set-version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

  build-and-release-windows:
    needs: determine_version
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'        
        
    - name: Build AOT for win-x64
      run: dotnet publish src/Xitira.SimpleFileServer.Api/Xitira.SimpleFileServer.Api.csproj -c Release -r win-x64  --self-contained true  -p:PublishAot=true  -p:Version=${{ needs.determine_version.outputs.version }} -o publish\win-x64\ /p:DebugType=None /p:DebugSymbols=false

    - name: Create Zip Archive
      run: |
        cd publish\win-x64\
        Compress-Archive -Path * -DestinationPath "..\..\Xitira.SimpleFileServer.Api-${{ needs.determine_version.outputs.version }}-win-x64.zip"
        cd ..\..
      shell: powershell

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Xitira.SimpleFileServer.Api-${{ needs.determine_version.outputs.version }}-win-x64
        path: Xitira.SimpleFileServer.Api-${{ needs.determine_version.outputs.version }}-win-x64.zip


  build-and-release-linux:
    needs: determine_version
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Build AOT for linux-x64
      run: |
        dotnet publish src/Xitira.SimpleFileServer.Api/Xitira.SimpleFileServer.Api.csproj \
          -c Release \
          -r linux-x64 \
          --self-contained true \
          -p:PublishAot=true \
          -p:Version=${{ needs.determine_version.outputs.version }} \
          -o publish/linux-x64 \
          /p:DebugType=None \
          /p:DebugSymbols=false

    - name: Create zip archive
      run: |
        cd publish/linux-x64
        chmod +x Xitira.SimpleFileServer.Api
        zip -r ../../Xitira.SimpleFileServer.Api-${{ needs.determine_version.outputs.version }}-linux-64.zip *
        cd ../..

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Xitira.SimpleFileServer.Api-${{ needs.determine_version.outputs.version }}-linux-x64
        path: Xitira.SimpleFileServer.Api-${{ needs.determine_version.outputs.version }}-linux-x64.zip

  create-release:
    needs: [determine_version,  build-and-release-linux, build-and-release-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Xitira.SimpleFileServer.Api-${{ needs.determine_version.outputs.version }}-win-x64/Xitira.SimpleFileServer.Api-${{ needs.determine_version.outputs.version }}-win-x64.zip
          Xitira.SimpleFileServer.Api-${{ needs.determine_version.outputs.version }}-linux-x64/Xitira.SimpleFileServer.Api-${{ needs.determine_version.outputs.version }}-linux-x64.zip
        tag_name: ${{ github.ref_name || format('v{0}', needs.determine_version.outputs.version) }}
        name: Xitira.SimpleFileServer.Api v${{ needs.determine_version.outputs.version }}
        generate_release_notes: true